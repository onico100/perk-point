src/app/api/auth src/app/api/auth/[...nextauth] src/app/api/auth/[...nextauth]/route.ts

import NextAuth from "next-auth";
import GoogleProvider from "next-auth/providers/google";
import { MongoDBAdapter } from "@next-auth/mongodb-adapter";
import clientPromise from "@/services/mongo"; // עדכני בהתאם

const authOptions = {
  providers: [
    GoogleProvider({
      clientId: process.env.GOOGLE_CLIENT_ID!,
      clientSecret: process.env.GOOGLE_CLIENT_SECRET!,
    }),
  ],
  adapter: MongoDBAdapter(clientPromise),
  secret: process.env.NEXTAUTH_SECRET,
  callbacks: {
    async signIn({ user, profile }) {
      console.log("User signing in:", user);
      const client = await clientPromise;
      const db = client.db("benefits-site");

      const existingUser = await db
        .collection("users_collection")
        .findOne({ email: user.email });

      if (!existingUser) {
        await db.collection("users_collection").insertOne({
          email: user.email,
          username: profile?.name || "משתמש חדש",
          isActive: true,
          password: "new-user-123-!@#",
          clubs: [],
          registrationDate: new Date().toISOString(),
          savedBenefits: [],
          city: "-1",
        });
      }

      return true;
    },
  },
};

const handler = NextAuth(authOptions);

export { handler as GET, handler as POST };
